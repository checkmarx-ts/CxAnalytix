version: 2.1
jobs:
  unit-test:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk
    steps:
      - checkout
      - run: dotnet test -v n -l "console;verbosity=detailed"
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk
    steps:
      - checkout
      - run: dotnet build --version-suffix ${CIRCLE_BUILD_NUM} -c Release -o artifacts
  package:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk
    steps:
      - checkout
      - run:
          name: Build & Package
          command: |
            export VERSION=$(echo ${CIRCLE_TAG} | sed -E 's/v(.+)/\1/g')
            dotnet publish -p:VersionPrefix=${VERSION} --version-suffix ${CIRCLE_BUILD_NUM} -c Release -o artifacts
            mkdir tmp
            python .circleci/zip.py --output "tmp/CxAnalytix-${VERSION}-${CIRCLE_BUILD_NUM}.zip" --input artifacts
            cp Dockerfile tmp/Dockerfile
      - persist_to_workspace:
          root: tmp
          paths:
            - ./*

  publish-github-release:
    docker:
      - image: circleci/golang:1.9
    steps:
      - attach_workspace:
          at: tmp
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            cd tmp
            BODY=$(sha256sum *)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -n ${CIRCLE_TAG} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -body "SHA256: ${BODY}" ${CIRCLE_TAG} .

  docker-push:
    docker:
      - image: docker:18.06.3-ce-git
        environment:
          DOCKER_REPO: docker.io/checkmarxts/cxanalytix
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: tmp
      - run:
          name: "Publish Images On Dockerhub"
          command: |
            cd tmp
            mv CxAnalytix-*.zip CxAnalytix.zip
            unzip CxAnalytix.zip
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} docker.io
            docker build -t ${DOCKER_REPO}:${CIRCLE_TAG} -t ${DOCKER_REPO}:${CIRCLE_SHA1} -t ${DOCKER_REPO} .
            docker push ${DOCKER_REPO}

workflows:
  version: 2
  package-release:
    jobs:
      - package:
          filters:
              tags:
                only: /^v.*/
              branches:
                ignore: /.*/
      - publish-github-release:
          filters:
              tags:
                only: /^v.*/
              branches:
                ignore: /.*/
          requires:
              - package
      - docker-push:
          filters:
              tags:
                only: /^v.*/
              branches:
                ignore: /.*/
          requires:
              - package      
  ci:
    jobs:
      # Unit tests need to execute on .net core 3.1, commented until they do
      # - unit-test
      - build
          # requires:
          #   - unit-test



   

