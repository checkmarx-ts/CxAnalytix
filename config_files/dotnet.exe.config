<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="CxCredentials" type="CxAnalytix.Configuration.CxCredentials, Configuration" />
		<section name="CxConnection" type="CxAnalytix.Configuration.CxConnection, Configuration" />
		<section name="CxAnalyticsService" type="CxAnalytix.Configuration.CxAnalyticsService, Configuration" />
		<section name="ProjectFilterRegex" type="CxAnalytix.Configuration.CxFilter, Configuration"/>
		<section name="CxLogOutput" type="CxAnalytix.Out.Log4NetOutput.LogOutputConfig, Log4NetOutput" />
		<section name="CxMongoOutput" type="CxAnalytix.Out.MongoDBOutput.MongoOutConfig, MongoDBOutput" />
		<section name="CxMongoConnection" type="CxAnalytix.Out.MongoDBOutput.MongoConnectionConfig, MongoDBOutput" />
		<section name="CxDB" type="CxAnalytix.CxAuditTrails.DB.Config.CxAuditDBConnection, CxAuditTrailsDB"/>
		<section name="CxAuditTrailSupressions" type="CxAnalytix.AuditTrails.Crawler.Config.CxAuditTrailSupressions, CxAuditTrailsCrawler"/>
		<section name="CxAuditTrailRecords" type="CxAnalytix.AuditTrails.Crawler.Config.CxAuditTrailRecordNameMap, CxAuditTrailsCrawler"/>
		<section name="AMQPConnection" type="CxAnalytix.Out.AMQPOutput.Config.AmqpConnectionConfig, AMQPOutput"/>
		<section name="AMQPConfig" type="CxAnalytix.Out.AMQPOutput.Config.AmqpConfig, AMQPOutput"/>
	</configSections>

	<!-- Common config parameters -->
	<CxConnection URL="%CHECKMARX_URL%"
                mnoURL="%CHECKMARX_MNO_URL%"
                TimeoutSeconds="600" ValidateCertificates="true" />
	<CxCredentials Username="%CHECKMARX_USERNAME%" Password ="%CHECKMARX_PASSWORD%" />
	<CxAnalyticsService ConcurrentThreads="2" StateDataStoragePath="%CHECKMARX_STATE_PATH%"
                      ProcessPeriodMinutes="120"
                      OutputFactoryClassPath="CxAnalytix.Out.Log4NetOutput.LoggerOutFactory, Log4NetOutput"
                      SASTScanSummaryRecordName="RECORD_SAST_Scan_Summary"
                      SASTScanDetailRecordName="RECORD_SAST_Scan_Detail"
                      SCAScanSummaryRecordName="RECORD_SCA_Scan_Summary"
                      SCAScanDetailRecordName="RECORD_SCA_Scan_Detail"
                      ProjectInfoRecordName="RECORD_Project_Info"
                      PolicyViolationsRecordName="RECORD_Policy_Violations"
                      />

	<!--
  Optional filtering of scans by team/project.
  
  Omission of the ProjectFilteringRegex is the same as having no filters.
  
  The Team and Project attributes are optional.  If either of these attributes is missing or assigned a blank string, it is the
  same as having no filter for the missing/blank element (e.g. Team="" means there is no Team filter)
  
  Negative matches are possible with regex.  Example:
  
  Team="^((?!AppSec).)*$"
  Project="master"
  
  Matches all projects with "master" appearing in the project name EXCEPT when the project is assigned to a
  team with the word "AppSec" in the team path.
  -->
	<!--
  <ProjectFilterRegex Team="" Project=""/>
  -->

	<!-- AMQP connection configuration - only needed if using AMQP as an output. -->

	<!-- 
  UserName and Password attributes are optional, will default to "guest:guest" if omitted.  The guest account
  is usually limited to connections to localhost.
  
  It is possible to define connection endpoints for multiple nodes in the cluster.  Connection and reconnection
  attempts to connect at the configured endpoints until a successful connection is made.

  SSL and non-SSL endpoints can be combined. SSL endpoints are also supported and can be configured with additional attributes that are optional:

  AllowCertNameMismatch - Failures to match the host name in the AmqpUri to the certificate are ignored. (Default: false)
  AllowCertificateChainErrors - Missing certificates in the CA chain are accepted. (Default: false)
  ServerName - The name of the server that is expected on the remote certificate. (Default: empty)
  ClientCertPath - A filepath to a PEM encoded client certificate. (Default: empty)
  ClientCertPassphrase - The password for the PEM encoded client certificate. (Default: empty)
  -->
	<!--
  <AMQPConnection UserName="foo" Password="bar">
    <ClusterNodes>
      <Endpoint AmqpUri="amqp://localhost:5672"/>
      <Endpoint AmqpUri="amqps://hostname:5671">
        <SSLOptions AllowCertNameMismatch="false" AllowCertificateChainErrors="false" ServerName="myserver"/>
      </Endpoint>
    </ClusterNodes>
  </AMQPConnection>
  -->

	<!-- AMQP routing configuration example - only needed if using AMQP as an output -->
	<!--
	This shows an example of a default header exchange named "bar" being sent all record types by default.  Header
	match options can be set when configuring Exchange bindings for queues to route records matching the headers
	to specific queues.  In this example, the record named "SAST_Scan_Summary" sets headers:
	
		RecordType - A static value indicating the type of record.
		ScanType - The text from the scan record field "ScanType" so that perhaps the queue is bound to receive only those
		records from "Full" types of scans but rejecting "Incremental" types.
		
	Header additions can be set for any record type.
	
	
	This example also shows records of type "SAST_Scan_Detail" sent to topic exchange "foo" where the topic is set to
	components from the scan detail to perhaps facilitate routing data to different queues with routing key specifications such as:
	
	"Full.1.New." - route the first node of all detail records for a first detected vulnerability's data flow path in a full scan to a specifc queue
	"Full.*.*.High.#" - route all nodes of High severity vulnerabilities from full scans to a specific queue
	
	The SAST_Scan_Detail record also has an example of a reject filter that rejects the code snippet from being sent along with the detail record.  Some
	cloud AMQP-compatible endpoints place limits on message size, so a Reject filter allows all fields EXCEPT the specified fields to be sent.  There
	is also a Pass filter that will send only the fields specified and rejects all others.
	
	-->
	<!--
	<AMQPConfig DefaultExchange="bar">
		<RecordSpecs>
			<Record Name="SAST_Scan_Summary">
				<MessageHeaders>
					<Header Key="RecordType" Spec="SAST_Scan_Summary" />
					<Header Key="ScanType" Spec="{ScanType}" />
				</MessageHeaders> 
			</Record>
			
			<Record Name="SAST_Scan_Detail" Exchange="foo" TopicSpec="{ScanType}.{NodeId}.{Status}.{ResultSeverity}.{QueryLanguage}.{QueryName}">
				<Filter Mode="Reject">
					<Fields>
						<Field Name="NodeCodeSnippet"/>
					</Fields>
				</Filter>
				<MessageHeaders>
					<Header Key="RecordType" Spec="SAST_Scan_Detail" />
					<Header Key="ScanType" Spec="{ScanType}" />
				</MessageHeaders> 
			</Record>
		</RecordSpecs>
	</AMQPConfig>
	-->



	<!-- Audit database connection string - only needed if also logging audit tables from the database. -->
	<!--
  <CxDB ConnectionString="server=127.0.0.1\SQLEXPRESS,1433;User Id=foo;Password=bar" />
  -->

	<!-- 
  MongoDB connection string - required if storing extracted data into MongoDB 
  
  Environment variable values specified in the connection string definition will be substituted when
  building the connection string.
  -->
	<!--
    <CxMongoConnection ConnectionString="mongodb://%COMPUTERNAME%:27017/<your DB name goes here>" />
  -->

	<!-- 
  MongoDB output configuration - optional if storing extracted data into MongoDB
  
  Shard key examples may not be suitable for data generated based on your scan volume.  
  -->
	<!-- 
  <CxMongoOutput>
    <GeneratedShardKeys>
      <Spec KeyName="SHARD" CollectionName="RECORD_CxDBaccesscontrolAuditTrail" FormatSpec="{Type}-{TimeStamp:yyyy-dddd}"  />
      <Spec KeyName="SHARD" CollectionName="RECORD_CxActivitydboAuditDataRetention" FormatSpec="RETENTION-{TimeStamp:yyyy-dddd}" NoHash="true"  />
      ...
      <Spec KeyName="pkey" CollectionName="SAST_Scan_Summary" FormatSpec="{ScanType}-{ScanFinished:yyyy-dddd}"  />
      <Spec KeyName="pkey" CollectionName="SAST_Scan_Detail" FormatSpec="{ScanType}-{QueryGroup}-{ScanFinished:yyyy-dddd}" NoHash="true" />
    </GeneratedShardKeys>
  </CxMongoOutput>
  -->

	<!-- 
  Audit trail record supressions
  
  Optional if logging audit tables.  Each attribute is also optional and defaults to false if not
  provided.  The audit table corresponding to the attribute name is not crawled if the attribute
  value is set to "true".
  -->
	<!--
  <CxAuditTrailSupressions
    CxDB.accesscontrol.AuditTrail="false"
    CxActivity.dbo.AuditTrail="false"
    CxActivity.dbo.Audit_DataRetention="false"
    CxActivity.dbo.Audit_Logins="false"
    CxActivity.dbo.Audit_Presets="false"
    CxActivity.dbo.Audit_Projects="false"
    CxActivity.dbo.Audit_Queries="false"
    CxActivity.dbo.Audit_QueriesActions="false"
    CxActivity.dbo.Audit_Reports="false"
    CxActivity.dbo.Audit_ScanRequests="false"
    CxActivity.dbo.Audit_Scans="false"
    CxActivity.dbo.Audit_Users="false"
    />
   -->

	<!--
  Audit trail record mappings
  
  Optional if logging audit tables.  Each attribute is also optional and defaults to the record name
  of the logger in the default log4net configuration.  This is mostly useful to provide more appropriate 
  names for MongoDB collections.  The values in this example are the default values used if no specific
  values are provided.
  -->
	<!--
  <CxAuditTrailRecords
    CxDB.accesscontrol.AuditTrail="RECORD_CxDBaccesscontrolAuditTrail"
    CxActivity.dbo.AuditTrail="RECORD_CxActivitydboAuditTrail"
    CxActivity.dbo.Audit_DataRetention="RECORD_CxActivitydboAuditDataRetention"
    CxActivity.dbo.Audit_Logins="RECORD_CxActivitydboAuditLogins"
    CxActivity.dbo.Audit_Presets="RECORD_CxActivitydboAuditPresets"
    CxActivity.dbo.Audit_Projects="RECORD_CxActivitydboAuditProjects"
    CxActivity.dbo.Audit_Queries="RECORD_CxActivitydboAuditQueries"
    CxActivity.dbo.Audit_QueriesActions="RECORD_CxActivitydboAuditQueriesActions"
    CxActivity.dbo.Audit_Reports="RECORD_CxActivitydboAuditReports"
    CxActivity.dbo.Audit_ScanRequests="RECORD_CxActivitydboAuditScanRequests"
    CxActivity.dbo.Audit_Scans="RECORD_CxActivitydboAuditScans"
    CxActivity.dbo.Audit_Users="RECORD_CxActivitydboAuditUsers"
    />
  -->

	<!-- 
    Optional log purging background task configuration.  Set OutputRoot to the directory where log files
    are generated.  Log files that have not been modified for greater than "DataRetentionDays" will
    be deleted.
  -->
	<CxLogOutput DataRetentionDays="3" OutputRoot="logs\">
		<PurgeSpecs>
			<spec MatchSpec="*.log" />
		</PurgeSpecs>
	</CxLogOutput>

</configuration>
